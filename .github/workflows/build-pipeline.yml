name: Image Build Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  REGISTRY: ghcr.io/ci-cd-lecture
  IMAGE_NAME: myapi


jobs:
#   build:

#     runs-on: ubuntu-latest
#     permissions:
#       contents: read
#       packages: write

#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v2
        
#       - name: Docker Setup Buildx
#         uses: docker/setup-buildx-action@v1.6.0
        
#       - name: Cache Docker Layers
#         uses: actions/cache@v2.1.6
#         with:
#           # A list of files, directories, and wildcard patterns to cache and restore
#           path: /tmp/.buildx-cache
#           # An explicit key for restoring and saving the cache
#           key:  ${{ runner.os }}-buildx-${{ github.sha }}
#           # An ordered list of keys to use for restoring the cache if no cache hit occurred for key
#           restore-keys: |
#             ${{ runner.os }}-buildx-
        
#       - name: Build MyApi image
#         run: docker build . --file MyApi/Dockerfile --tag ${{ env.IMAGE_NAME }}:$(date +%s)
  
  publish:
#     needs: [build]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Docker Setup Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1.6.0

      - name: Cache Docker Layers
        uses: actions/cache@v2.1.6
        with:
          # A list of files, directories, and wildcard patterns to cache and restore
          path: /tmp/.buildx-cache
          # An explicit key for restoring and saving the cache
          key:  ${{ runner.os }}-buildx-${{ github.sha }}
          # An ordered list of keys to use for restoring the cache if no cache hit occurred for key
          restore-keys: |
            ${{ runner.os }}-buildx-
            
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1.10.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: linux/amd64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new
          
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
